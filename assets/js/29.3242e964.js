(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{392:function(a,t,e){"use strict";e.r(t);var s=e(41),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"webpack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[a._v("#")]),a._v(" Webpack")]),a._v(" "),e("h2",{attrs:{id:"webpack打包原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack打包原理"}},[a._v("#")]),a._v(" webpack打包原理")]),a._v(" "),e("ol",[e("li",[a._v("识别入口文件，逐级递归识别依赖，构建依赖图谱")]),a._v(" "),e("li",[a._v("将代码转化为AST抽象语法树")]),a._v(" "),e("li",[a._v("在AST阶段中去处理代码")]),a._v(" "),e("li",[a._v("把AST抽象语法树变成浏览器可以识别的代码，然后输出")])]),a._v(" "),e("h2",{attrs:{id:"webpack的缺点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack的缺点"}},[a._v("#")]),a._v(" webpack的缺点")]),a._v(" "),e("ol",[e("li",[a._v("缓慢的服务器启动。当冷启动开发服务器时，基于打包的方式是在提供服务前去急切地抓取和构建你地整个应用。")]),a._v(" "),e("li",[a._v("使用地是node.js去实现。")]),a._v(" "),e("li",[a._v("热更新效率低下。当基于打包器启动时，编辑文件后将重新构建文件本身。显然我们不应该重新构建整个包，\n因为这样更新速度会随着应用体积增长而直线下降。")])])])}),[],!1,null,null,null);t.default=r.exports}}]);