(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{480:function(t,s,e){"use strict";e.r(s);var a=e(41),i=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"git-备忘录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-备忘录"}},[t._v("#")]),t._v(" Git 备忘录")]),t._v(" "),e("h2",{attrs:{id:"多账号配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多账号配置"}},[t._v("#")]),t._v(" 多账号配置")]),t._v(" "),e("p",[t._v("~/.ssh/config 文件添加以下内容：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Host github.com\n  HostName github.com\n  User ***.com\n  AddKeysToAgent yes\n  UseKeychain yes\n  IdentityFile ~/.ssh/***\n\nHost gitlab.com\n  HostName gitlab.com\n  User ***.com\n  AddKeysToAgent yes\n  UseKeychain yes\n  IdentityFile ~/.ssh/***\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[t._v("手动添加密钥："),e("code",[t._v("ssh-add -K ~/.ssh/id_github")])]),t._v(" "),e("h2",{attrs:{id:"分支管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支管理"}},[t._v("#")]),t._v(" 分支管理")]),t._v(" "),e("ol",[e("li",[t._v("查看本地分支："),e("code",[t._v("git branch")])]),t._v(" "),e("li",[t._v("查看所有分支："),e("code",[t._v("git branch -a | grep xxx")])]),t._v(" "),e("li",[t._v("查看本地分支和远程分支关联信息："),e("code",[t._v("git branch -vv")])]),t._v(" "),e("li",[t._v("拉取远程分支："),e("code",[t._v("git checkout -b xxx origin/xxx")])]),t._v(" "),e("li",[t._v("推送远程分支： "),e("code",[t._v("git push --set-upstream origin xxx")])]),t._v(" "),e("li",[t._v("本地分支与远程分支关联："),e("code",[t._v("git branch --set-upstream-to=origin/xxx xxx")])]),t._v(" "),e("li",[t._v("本地分支与远程分支: "),e("code",[t._v("git branch --unset-upstream")])]),t._v(" "),e("li",[t._v("重命名分支："),e("code",[t._v("git branch -m oldBranchName newBranchName")])])]),t._v(" "),e("h2",{attrs:{id:"撤销修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#撤销修改"}},[t._v("#")]),t._v(" 撤销修改")]),t._v(" "),e("ol",[e("li",[t._v("撤销工作区："),e("code",[t._v("git checkout --filename")]),t._v(" 或 "),e("code",[t._v("git checkout .")])]),t._v(" "),e("li",[t._v("撤销暂存区: "),e("code",[t._v("git reset HEAD filename")]),t._v(" 或 "),e("code",[t._v("git reset HEAD")]),t._v("·")]),t._v(" "),e("li",[t._v("撤销版本库："),e("code",[t._v("git reset --hard HEAD^")]),t._v(" 或 "),e("code",[t._v("git reset --hard commitId")])])]),t._v(" "),e("p",[t._v("git 的三个区域：")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Working Tree")]),t._v("：当前的工作区域")]),t._v(" "),e("li",[e("strong",[t._v("Index/Stage")]),t._v("：暂存区域，和git stash命令暂存的地方不一样。使用git add xx，就可以将xx添加近Stage里面")]),t._v(" "),e("li",[e("strong",[t._v("Repository")]),t._v(" 提交的历史，即使用git commit提交后的结果")])]),t._v(" "),e("p",[t._v("reset 的三种模式：")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("hard")]),t._v("：重置 HEAD 和branch的同时，重置stage区和工作目录里的内容。")]),t._v(" "),e("li",[e("strong",[t._v("soft")]),t._v("：重置 HEAD 和 branch 时，保留工作目录和暂存区中的内容，并把重置 HEAD 所带来的新的差异放进暂存区。")]),t._v(" "),e("li",[e("strong",[t._v("mixed")]),t._v("：重置 HEAD 和branch的同时，保留工作目录，并清空暂存区。不加参数默认使用这个模式。")])]),t._v(" "),e("h2",{attrs:{id:"取消合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#取消合并"}},[t._v("#")]),t._v(" 取消合并")]),t._v(" "),e("ol",[e("li",[t._v("取消正在合并的请求: "),e("code",[t._v("git merge --abort")])]),t._v(" "),e("li",[t._v("取消已经合并的请求： "),e("code",[t._v("git revert -m 1 or 2 commitId")]),t._v("，1 代表保留本来的分支，2代表保留合并过来的分支")])])])}),[],!1,null,null,null);s.default=i.exports}}]);