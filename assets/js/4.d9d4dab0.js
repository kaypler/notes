(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{374:function(s,t,a){s.exports=a.p+"assets/img/function-call-procedure.52c96067.png"},375:function(s,t,a){s.exports=a.p+"assets/img/let-scope.f21a6945.png"},376:function(s,t,a){s.exports=a.p+"assets/img/prototype-all.7a43bd87.png"},377:function(s,t,a){s.exports=a.p+"assets/img/prototype.fa12b767.png"},378:function(s,t,a){s.exports=a.p+"assets/img/prototype-chain.83202e60.png"},379:function(s,t,a){s.exports=a.p+"assets/img/this.70c3b8d1.png"},429:function(s,t,a){"use strict";a.r(t);var n=a(41),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"javascript"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[s._v("#")]),s._v(" Javascript")]),s._v(" "),n("h2",{attrs:{id:"变量提升"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#变量提升"}},[s._v("#")]),s._v(" 变量提升")]),s._v(" "),n("p",[s._v("所谓的变量提升，是指在 JavaScript 代码执行过程中，JavaScript 引擎把变量的声明部分和函数的声明部分提升到代码开头的“行为”。\n变量被提升后，会给变量设置默认值，这个默认值就是我们熟悉的 undefined。")]),s._v(" "),n("ul",[n("li",[s._v("JavaScript 代码执行过程中，需要先做"),n("strong",[s._v("变量提升")]),s._v("，而之所以需要实现变量提升，是因为 JavaScript 代码在执行之前需要先编译。")]),s._v(" "),n("li",[s._v("在"),n("strong",[s._v("编译阶段")]),s._v("，变量和函数会被存放到"),n("strong",[s._v("变量环境")]),s._v("中，变量的默认值会被设置为 undefined；在代码"),n("strong",[s._v("执行阶段")]),s._v("，JavaScript 引擎会从变量环境中去查找自定义的变量和函数。")]),s._v(" "),n("li",[s._v("如果在编译阶段，存在两个相同的函数，那么最终存放在变量环境中的是最后定义的那个，这是因为后定义的会覆盖掉之前定义的。")]),s._v(" "),n("li",[n("strong",[s._v("函数提升要比变量提升的优先级要高，且不会被变量声明覆盖，但是会被变量赋值之后覆盖")]),s._v("。")])]),s._v(" "),n("h3",{attrs:{id:"变量提升带来的问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#变量提升带来的问题"}},[s._v("#")]),s._v(" 变量提升带来的问题")]),s._v(" "),n("ol",[n("li",[s._v("变量容易在不被察觉的情况下被覆盖掉")]),s._v(" "),n("li",[s._v("本应销毁的变量没有被销毁")])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("showName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("showName")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("showName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("showName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 输出 1 2")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 输出 7")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("h2",{attrs:{id:"函数调用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数调用"}},[s._v("#")]),s._v(" 函数调用")]),s._v(" "),n("p",[n("img",{attrs:{src:a(374),alt:"function-call-procedure"}})]),s._v(" "),n("ul",[n("li",[s._v("每调用一个函数，JavaScript 引擎会为其创建"),n("strong",[s._v("执行上下文")]),s._v("，并把该执行上下文压入调用栈，然后 JavaScript 引擎开始执行函数代码。")]),s._v(" "),n("li",[s._v("如果在一个函数 A 中调用了另外一个函数 B，那么 JavaScript 引擎会为 B 函数创建执行上下文，并将 B 函数的执行上下文压入栈顶。")]),s._v(" "),n("li",[s._v("当前函数执行完毕后，JavaScript 引擎会将该函数的执行上下文弹出栈。")]),s._v(" "),n("li",[s._v("当分配的调用栈空间被占满时，会引发“堆栈溢出”问题。")])]),s._v(" "),n("h2",{attrs:{id:"作用域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[s._v("#")]),s._v(" 作用域")]),s._v(" "),n("p",[s._v("作用域是指在程序中定义变量的区域，该位置决定了变量的生命周期。通俗地理解，作用域就是变量与函数的可访问范围，即作用域控制着变量和函数的可见性和生命周期。")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("全局作用域")]),s._v("中的对象在代码中的任何地方都能访问，其生命周期伴随着页面的生命周期。")]),s._v(" "),n("li",[n("strong",[s._v("函数作用域")]),s._v("就是在函数内部定义的变量或者函数，并且定义的变量或者函数只能在函数内部被访问。函数执行结束之后，函数内部定义的变量会被销毁。")]),s._v(" "),n("li",[s._v("ES6 引入了 "),n("strong",[s._v("let")]),s._v(" 和 "),n("strong",[s._v("const")]),s._v(" 关键字，从而使 JavaScript 也能像其他语言一样拥有了"),n("strong",[s._v("块级作用域")]),s._v("。")])]),s._v(" "),n("h3",{attrs:{id:"块级作用域的原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#块级作用域的原理"}},[s._v("#")]),s._v(" 块级作用域的原理")]),s._v(" "),n("p",[n("img",{attrs:{src:a(375),alt:"let-scope"}})]),s._v(" "),n("ul",[n("li",[s._v("函数内部通过 var 声明的变量，在编译阶段全都被存放到"),n("strong",[s._v("变量环境")]),s._v("里面了。")]),s._v(" "),n("li",[s._v("通过 let 声明的变量，在编译阶段会被存放到"),n("strong",[s._v("词法环境")]),s._v("（Lexical Environment）中。")]),s._v(" "),n("li",[s._v("在函数的作用域块内部，通过 let 声明的变量并没有被存放到词法环境中。")])]),s._v(" "),n("p",[s._v("当进入函数的作用域块时，作用域块中通过 let 声明的变量，会被存放在词法环境的一个单独的区域中，这个区域中的变量并不影响作用域块外面的变量，\n比如在作用域外面声明了变量 b，在该作用域块内部也声明了变量 b，当执行到作用域内部时，它们都是独立的存在。")]),s._v(" "),n("p",[s._v("其实，在词法环境内部，维护了一个小型栈结构，栈底是函数最外层的变量，进入一个作用域块后，就会把该作用域块内部的变量压到栈顶；当作用域执行完成之后，该作用域的信息就会从栈顶弹出，这就是词法环境的结构。")]),s._v(" "),n("p",[s._v("变量的具体查找方式是：沿着词法环境的栈顶向下查询，如果在词法环境中的某个块中查找到了，就直接返回给 JavaScript 引擎，如果没有查找到，那么继续在变量环境中查找。")]),s._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[s._v("暂时性死区")]),s._v(" "),n("p",[s._v("通过let或者const声明的变量会在进入块级作用域的时被创建，但是在该变量没有赋值之前，引用该变量JavaScript引擎会抛出错误---这就是“暂时性死区”。")])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" myName "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("show")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" myName "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("show")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// VM328:3 Uncaught ReferenceError: Cannot access 'myName' before initialization")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h2",{attrs:{id:"闭包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[s._v("#")]),s._v(" 闭包")]),s._v(" "),n("p",[s._v("在 JavaScript 中，根据词法作用域的规则，内部函数总是可以访问其外部函数中声明的变量，当通过调用一个外部函数返回一个内部函数后，即使该外部函数已经执行结束了，但是内部函数引用外部函数的变量依然保存在内存中，我们就把这些变量的集合称为闭包。比如外部函数是 foo，那么这些变量的集合就称为 foo 函数的闭包。")]),s._v(" "),n("h2",{attrs:{id:"原型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原型"}},[s._v("#")]),s._v(" 原型")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://juejin.cn/post/6844903613584654344",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考"),n("OutboundLink")],1),s._v(" "),n("img",{attrs:{src:a(376),alt:"An image"}})]),s._v(" "),n("p",[s._v("每个对象拥有一个原型对象，对象以其原型为模板，从原型继承方法和属性，这些属性和方法定义在对象的构造器函数的 prototype 属性上，而非对象实例本身。\n"),n("img",{attrs:{src:a(377),alt:"An image"}})]),s._v(" "),n("h3",{attrs:{id:"原型链"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[s._v("#")]),s._v(" 原型链")]),s._v(" "),n("p",[s._v("每个对象拥有一个原型对象，通过 "),n("strong",[s._v("proto")]),s._v(" 指针指向上一个原型 ，并从中继承方法和属性，同时原型对象也可能拥有原型，这样一层一层，\n最终指向 null。这种关系被称为原型链 (prototype chain)，通过原型链一个对象会拥有定义在其他对象中的属性和方法。\n"),n("img",{attrs:{src:a(378),alt:"An image"}})]),s._v(" "),n("h2",{attrs:{id:"this"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#this"}},[s._v("#")]),s._v(" this")]),s._v(" "),n("p",[s._v("在对象内部的方法中使用对象内部的属性是一个非常普遍的需求。但是 JavaScript 的作用域机制并不支持这一点，基于这个需求，JavaScript 又搞出来另外一套 this 机制。\n"),n("img",{attrs:{src:a(379),alt:"An image"}})]),s._v(" "),n("p",[s._v("从图中可以看出，"),n("strong",[s._v("this 是和执行上下文绑定的")]),s._v("，也就是说每个执行上下文中都有一个 this。执行上下文主要分为三种——全局执行上下文、函数执行上下文和 eval 执行上下文，所以对应的 this 也只有这三种——全局执行上下文中的 this、函数中的 this 和 eval 中的 this。")]),s._v(" "),n("h3",{attrs:{id:"默认绑定"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#默认绑定"}},[s._v("#")]),s._v(" 默认绑定")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("独立函数调用")]),s._v("，可以把默认绑定看作是无法应用其他规则时的默认规则，this指向全局对象。")]),s._v(" "),n("li",[n("strong",[s._v("严格模式")]),s._v("下，不能将全局对象用于默认绑定，this会绑定到undefined。只有函数运行在非严格模式下，默认绑定才能绑定到全局对象。在严格模式下调用函数则不影响默认绑定。")])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 运行在严格模式下，this会绑定到undefined")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"use strict"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// TypeError: Cannot read property 'a' of undefined")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 运行")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 严格模式下调用函数则不影响默认绑定")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"use strict"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("h3",{attrs:{id:"隐式绑定"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#隐式绑定"}},[s._v("#")]),s._v(" 隐式绑定")]),s._v(" "),n("p",[s._v("当函数引用有上下文对象时，隐式绑定规则会把函数中的this绑定到这个上下文对象。对象属性引用链中只有上一层或者说最后一层在调用中起作用。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    a"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    foo"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" foo\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nobj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[n("strong",[s._v("隐式丢失")]),s._v(" 被隐式绑定的函数特定情况下会丢失绑定对象，应用默认绑定，把this绑定到全局对象或者undefined上。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 虽然bar是obj.foo的一个引用，但是实际上，它引用的是foo函数本身。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// bar()是一个不带任何修饰的函数调用，应用默认绑定。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    a"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    foo"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" foo\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" bar "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("foo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 函数别名")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"oops, global"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// a是全局对象的属性")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "oops, global"')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("参数传递就是一种隐式赋值，传入函数时也会被隐式赋值。回调函数丢失this绑定是非常常见的。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("doFoo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// fn其实引用的是foo")]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// <-- 调用位置！")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    a"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    foo"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" foo\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"oops, global"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// a是全局对象的属性")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("doFoo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("foo "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "oops, global"')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("h3",{attrs:{id:"显式绑定"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#显式绑定"}},[s._v("#")]),s._v(" 显式绑定")]),s._v(" "),n("p",[s._v("通过call(..) 或者 apply(..)方法。第一个参数是一个对象，在调用函数时将这个对象绑定到this。因为直接指定this的绑定对象，称之为显示绑定。")]),s._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[s._v("WARNING")]),s._v(" "),n("p",[s._v("显示绑定无法解决丢失绑定问题。bind函数可以解决这个问题")])]),s._v(" "),n("h3",{attrs:{id:"new-绑定"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#new-绑定"}},[s._v("#")]),s._v(" new 绑定")]),s._v(" "),n("p",[s._v("在JS中，构造函数只是使用new操作符时被调用的普通函数，他们不属于某个类，也不会实例化一个类。\n包括内置对象函数（比如Number(..)）在内的所有函数都可以用new来调用，这种函数调用被称为构造函数调用。\n实际上并不存在所谓的“构造函数”，只有对于函数的“构造调用”。"),n("br")]),s._v(" "),n("p",[s._v("使用new来调用函数，或者说发生构造函数调用时，会自动执行下面的操作。")]),s._v(" "),n("ol",[n("li",[s._v("创建（或者说构造）一个新对象。")]),s._v(" "),n("li",[s._v("这个新对象会被执行"),n("strong",[s._v("Prototype")]),s._v("连接。")]),s._v(" "),n("li",[s._v("这个新对象会绑定到函数调用的this。")]),s._v(" "),n("li",[s._v("如果函数没有返回其他对象，那么new表达式中的函数调用会自动返回这个新对象。")])]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("箭头函数")]),s._v(" "),n("p",[s._v("箭头函数是根据外层（函数或者全局）作用域（词法作用域）来决定this。"),n("br"),s._v("\n对于箭头函数的this总结如下：")]),s._v(" "),n("ol",[n("li",[s._v("箭头函数不绑定this，箭头函数中的this相当于普通变量。")]),s._v(" "),n("li",[s._v("箭头函数的this寻值行为与普通变量相同，在作用域中逐级寻找。")]),s._v(" "),n("li",[s._v("箭头函数的this无法通过bind，call，apply来直接修改（可以间接修改）。")]),s._v(" "),n("li",[s._v("改变作用域中this的指向可以改变箭头函数的this。")]),s._v(" "),n("li",[s._v("eg. "),n("code",[s._v("function closure(){()=>{//code }}")]),s._v("，在此例中，我们通过改变封包环境"),n("code",[s._v("closure.bind(another)()")]),s._v("，来改变箭头函数this的指向。")])])]),s._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[s._v("this 的设计缺陷以及应对方案")]),s._v(" "),n("p",[n("strong",[s._v("嵌套函数中的 this 不会从外层函数中继承")]),s._v("。要解决这个问题，你可以有两种思路：")]),s._v(" "),n("ul",[n("li",[s._v("第一种是把 this 保存为一个 self 变量，再利用变量的作用域机制传递给嵌套函数。")]),s._v(" "),n("li",[s._v("第二种是继续使用 this，但是要把嵌套函数改为箭头函数，因为箭头函数没有自己的执行上下文，所以它会继承调用函数中的 this。")])])]),s._v(" "),n("h2",{attrs:{id:"严格模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#严格模式"}},[s._v("#")]),s._v(" 严格模式")]),s._v(" "),n("p",[s._v("严格模式主要有以下限制：")]),s._v(" "),n("ul",[n("li",[s._v("变量必须声明后再使用")]),s._v(" "),n("li",[s._v("函数的参数不能有同名属性，否则报错")]),s._v(" "),n("li",[s._v("不能使用with语句")]),s._v(" "),n("li",[s._v("不能对只读属性赋值，否则报错")]),s._v(" "),n("li",[s._v("不能使用前缀 0 表示八进制数，否则报错")]),s._v(" "),n("li",[s._v("不能删除不可删除的属性，否则报错")]),s._v(" "),n("li",[s._v("不能删除变量delete prop，会报错，只能删除属性delete global[prop]")]),s._v(" "),n("li",[s._v("eval不会在它的外层作用域引入变量")]),s._v(" "),n("li",[s._v("eval和arguments不能被重新赋值")]),s._v(" "),n("li",[s._v("arguments不会自动反映函数参数的变化")]),s._v(" "),n("li",[s._v("不能使用arguments.callee")]),s._v(" "),n("li",[s._v("不能使用arguments.caller")]),s._v(" "),n("li",[s._v("禁止this指向全局对象")]),s._v(" "),n("li",[s._v("不能使用fn.caller和fn.arguments获取函数调用的堆栈")]),s._v(" "),n("li",[s._v("增加了保留字（比如protected、static和interface）")])]),s._v(" "),n("h2",{attrs:{id:"模块化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#模块化"}},[s._v("#")]),s._v(" 模块化")]),s._v(" "),n("p",[n("strong",[s._v("AMD 与 CMD")]),s._v("：")]),s._v(" "),n("ul",[n("li",[s._v("AMD是 RequireJS 在推广过程中对模块定义的规范化产出。")]),s._v(" "),n("li",[s._v("CMD是 SeaJS 在推广过程中对模块定义的规范化产出。")]),s._v(" "),n("li",[s._v("CMD推崇依赖就近，AMD推崇依赖前置。")])]),s._v(" "),n("p",[n("strong",[s._v("ES Module与CommonJS")]),s._v(":")]),s._v(" "),n("ul",[n("li",[s._v("CommonJS模块是对象，是运行时加载，运行时才把模块挂载在exports之上（加载整个模块的所有），加载模块其实就是查找对象属性。")]),s._v(" "),n("li",[s._v("ES Module不是对象，是使用export显性指定输出，再通过import输入。此法为编译时加载，编译时遇到import就会生成一个只读引用。\n等到运行时就会根据此引用去被加载的模块取值。所以不会加载模块所有方法，仅取所需。")]),s._v(" "),n("li",[s._v("CommonJS 模块输出的是一个值的拷贝，ES6 模块输出的是值的引用。")]),s._v(" "),n("li",[s._v("CommonJS 模块是运行时加载，ES6 模块是编译时输出接口")])]),s._v(" "),n("p",[n("strong",[s._v("CommonJS与AMD/CMD")]),s._v(":")]),s._v(" "),n("ul",[n("li",[s._v("AMD/CMD是CommonJS在浏览器端的解决方案。")]),s._v(" "),n("li",[s._v("CommonJS是同步加载（代码在本地，加载时间基本等于硬盘读取时间）。")]),s._v(" "),n("li",[s._v("AMD/CMD是异步加载（浏览器必须这么做，代码在服务端）")])]),s._v(" "),n("p",[n("strong",[s._v("UMD与AMD/CMD")]),s._v(":")]),s._v(" "),n("ul",[n("li",[s._v("UMD（Universal Module Definition）是AMD和CommonJS的糅合，跨平台的解决方案。")]),s._v(" "),n("li",[s._v("AMD模块以浏览器第一的原则发展，异步加载模块。")]),s._v(" "),n("li",[s._v("CommonJS模块以服务器第一原则发展，选择同步加载，它的模块无需包装(unwrapped modules)。")]),s._v(" "),n("li",[s._v("UMD先判断是否支持Node.js的模块（exports）是否存在，存在则使用Node.js模块模式。再判断是否支持AMD（define是否存在），存在则使用AMD方式加载模块。")])]),s._v(" "),n("h3",{attrs:{id:"参考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://juejin.cn/post/6844903663404580878",target:"_blank",rel:"noopener noreferrer"}},[s._v("AMD, CMD, CommonJS，ES Module，UMD"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://segmentfault.com/a/1190000014318751",target:"_blank",rel:"noopener noreferrer"}},[s._v("图说 ES Modules"),n("OutboundLink")],1)])]),s._v(" "),n("h2",{attrs:{id:"v8的垃圾回收策略"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#v8的垃圾回收策略"}},[s._v("#")]),s._v(" V8的垃圾回收策略")]),s._v(" "),n("p",[s._v("V8的垃圾回收策略主要是基于"),n("strong",[s._v("分代式垃圾回收机制")]),s._v("，其根据对象的存活时间将内存的垃圾回收进行不同的分代，然后对不同的分代采用不同的垃圾回收算法。")]),s._v(" "),n("h3",{attrs:{id:"v8的内存结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#v8的内存结构"}},[s._v("#")]),s._v(" V8的内存结构")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("新生代(new_space)")]),s._v(": 大多数的对象开始都会被分配在这里，这个区域相对较小但是垃圾回收特别频繁，该区域被分为两半，一半用来分配内存，另一半用于在垃圾回收时将需要保留的对象复制过来。")]),s._v(" "),n("li",[n("strong",[s._v("老生代(old_space)")]),s._v(": 新生代中的对象在存活一段时间后就会被转移到老生代内存区，相对于新生代该内存区域的垃圾回收频率较低。老生代又分为老生代指针区和老生代数据区，前者包含大多数可能存在指向其他对象的指针的对象，后者只保存原始数据对象，这些对象没有指向其他对象的指针。")]),s._v(" "),n("li",[n("strong",[s._v("大对象区(large_object_space)")]),s._v(": 存放体积超越其他区域大小的对象，每个对象都会有自己的内存，垃圾回收不会移动大对象区。")]),s._v(" "),n("li",[n("strong",[s._v("代码区(code_space)")]),s._v(": 代码对象，会被分配在这里，唯一拥有执行权限的内存区域。")]),s._v(" "),n("li",[n("strong",[s._v("map区(map_space)")]),s._v(": 存放Cell和Map，每个区域都是存放相同大小的元素，结构简单")])]),s._v(" "),n("h3",{attrs:{id:"新生代"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#新生代"}},[s._v("#")]),s._v(" 新生代")]),s._v(" "),n("p",[s._v("在V8引擎的内存结构中，新生代主要用于存放存活时间较短的对象。新生代内存是由两个semispace(半空间)构成的，内存最大值在64位系统和32位系统上分别为32MB和16MB，\n在新生代的垃圾回收过程中主要采用了Scavenge算法。")]),s._v(" "),n("p",[s._v("Scavenge算法是一种典型的牺牲空间换取时间的算法。在Scavenge算法的具体实现中，主要采用了Cheney算法，它将新生代内存一分为二，每一个部分的空间称为semispace，\n其中处于激活状态的区域我们称为From空间，未激活(inactive new space)的区域我们称为To空间。\n这两个空间中，始终只有一个处于使用状态，另一个处于闲置状态。我们的程序中声明的对象首先会被分配到From空间，当进行垃圾回收时，如果From空间中尚有存活对象，\n则会被复制到To空间进行保存，非存活的对象会被自动回收。当复制完成后，From空间和To空间完成一次角色互换，To空间会变为新的From空间，原来的From空间则变为To空间。")]),s._v(" "),n("h3",{attrs:{id:"对象晋升"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#对象晋升"}},[s._v("#")]),s._v(" 对象晋升")]),s._v(" "),n("p",[s._v("当一个对象在经过多次复制之后依旧存活，那么它会被认为是一个生命周期较长的对象，在下一次进行垃圾回收时，该对象会被直接转移到老生代中，这种对象从新生代转移到老生代的过程我们称之为晋升。")]),s._v(" "),n("p",[s._v("对象晋升的条件主要有以下两个：")]),s._v(" "),n("ul",[n("li",[s._v("对象是否经历过一次Scavenge算法")]),s._v(" "),n("li",[s._v("To空间的内存占比是否已经超过25%")])]),s._v(" "),n("h3",{attrs:{id:"老生代"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#老生代"}},[s._v("#")]),s._v(" 老生代")]),s._v(" "),n("p",[s._v("在老生代中，采用新的算法"),n("code",[s._v("Mark-Sweep(标记清除)")]),s._v("和"),n("code",[s._v("Mark-Compact(标记整理)")]),s._v("来进行管理。")]),s._v(" "),n("p",[n("code",[s._v("Mark-Sweep")]),s._v("算法主要是通过判断某个对象是否可以被访问到，从而知道该对象是否应该被回收，具体步骤如下：")]),s._v(" "),n("ul",[n("li",[s._v("垃圾回收器会在内部构建一个根列表，用于从根节点出发去寻找那些可以被访问到的变量。比如在JavaScript中，window全局对象可以看成一个根节点。")]),s._v(" "),n("li",[s._v("然后，垃圾回收器从所有根节点出发，遍历其可以访问到的子节点，并将其标记为活动的，根节点不能到达的地方即为非活动的，将会被视为垃圾。")]),s._v(" "),n("li",[s._v("最后，垃圾回收器将会释放所有非活动的内存块，并将其归还给操作系统。")])]),s._v(" "),n("p",[s._v("但是Mark-Sweep算法存在一个问题，就是在经历过一次标记清除后，内存空间可能会出现不连续的状态，因为我们所清理的对象的内存地址可能不是连续的，\n所以就会出现内存碎片的问题，导致后面如果需要分配一个大对象而空闲内存不足以分配，就会提前触发垃圾回收，而这次垃圾回收其实是没必要的，\n因为我们确实有很多空闲内存，只不过是不连续的。")]),s._v(" "),n("p",[s._v("为了解决这种内存碎片的问题，"),n("code",[s._v("Mark-Compact(标记整理)")]),s._v("算法被提了出来，该算法主要就是用来解决内存的碎片化问题的，回收过程中将死亡对象清除后，\n在整理的过程中，会将活动的对象往堆内存的一端进行移动，移动完成后再清理掉边界外的全部内存，")]),s._v(" "),n("p",[s._v("由于JS的单线程机制，垃圾回收的过程会阻碍主线程同步任务的执行，待执行完垃圾回收后才会再次恢复执行主任务的逻辑，这种行为被称为"),n("strong",[s._v("全停顿(stop-the-world)")]),s._v("。\n为了减少垃圾回收带来的停顿时间，V8引擎又引入了"),n("code",[s._v("Incremental Marking(增量标记)")]),s._v("的概念，即将原本需要一次性遍历堆内存的操作改为增量标记的方式，\n先标记堆内存中的一部分对象，然后暂停，将执行权重新交给JS主线程，待主线程任务执行完毕后再从原来暂停标记的地方继续标记，直到标记完整个堆内存。\n这个理念其实有点像React框架中的Fiber架构，只有在浏览器的空闲时间才会去遍历Fiber Tree执行对应的任务，否则延迟执行，尽可能少地影响主线程的任务，避免应用卡顿，提升应用性能。")]),s._v(" "),n("p",[s._v("得益于增量标记的好处，V8引擎后续继续引入了"),n("code",[s._v("延迟清理(lazy sweeping)")]),s._v("和"),n("code",[s._v("增量式整理(incremental compaction)")]),s._v("，让清理和整理的过程也变成增量式的。\n同时为了充分利用多核CPU的性能，也将引入并行标记和并行清理，进一步地减少垃圾回收对主线程的影响，为应用提升更多的性能。")]),s._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[s._v("为什么不用引用计数法？")]),s._v(" "),n("p",[s._v("引用计数法无法回收循环引用的对象，导致内存泄漏。")])]),s._v(" "),n("h3",{attrs:{id:"如何避免内存泄漏"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何避免内存泄漏"}},[s._v("#")]),s._v(" 如何避免内存泄漏")]),s._v(" "),n("ol",[n("li",[s._v("尽可能少地创建全局变量")]),s._v(" "),n("li",[s._v("手动清除定时器")]),s._v(" "),n("li",[s._v("少用闭包")]),s._v(" "),n("li",[s._v("清除DOM引用")]),s._v(" "),n("li",[s._v("使用弱引用")])]),s._v(" "),n("h3",{attrs:{id:"参考-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考-2"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://juejin.cn/post/6844904016325902344",target:"_blank",rel:"noopener noreferrer"}},[s._v("一文搞懂V8引擎的垃圾回收"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);