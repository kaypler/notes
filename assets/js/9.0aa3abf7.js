(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{369:function(t,s,r){t.exports=r.p+"assets/img/box-model.eea9f77e.png"},370:function(t,s,r){t.exports=r.p+"assets/img/async-defer.6dae3337.png"},397:function(t,s,r){"use strict";r.r(s);var a=r(41),v=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"浏览器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器"}},[t._v("#")]),t._v(" 浏览器")]),t._v(" "),a("h2",{attrs:{id:"bfc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfc"}},[t._v("#")]),t._v(" BFC")]),t._v(" "),a("p",[t._v("BFC 即 Block Formatting Contexts (块级格式化上下文)，它属于定位方案的普通流。\n具有 BFC 特性的元素可以看作是隔离了的独立容器，容器里面的元素不会在布局上影响到外面的元素，并且 BFC 具有普通容器所没有的一些特性。")]),t._v(" "),a("h3",{attrs:{id:"触发bfc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#触发bfc"}},[t._v("#")]),t._v(" 触发BFC")]),t._v(" "),a("p",[t._v("只要元素满足下面任一条件即可触发 BFC 特性：")]),t._v(" "),a("ul",[a("li",[t._v("body 根元素")]),t._v(" "),a("li",[t._v("浮动元素：float 除 none 以外的值")]),t._v(" "),a("li",[t._v("绝对定位元素：position (absolute、fixed)")]),t._v(" "),a("li",[t._v("display 为 inline-block、table-cells、flex")]),t._v(" "),a("li",[t._v("overflow 除了 visible 以外的值 (hidden、auto、scroll)")])]),t._v(" "),a("h3",{attrs:{id:"bfc-特性及应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfc-特性及应用"}},[t._v("#")]),t._v(" BFC 特性及应用")]),t._v(" "),a("ol",[a("li",[t._v("同一个 BFC 下外边距会发生折叠")]),t._v(" "),a("li",[t._v("BFC 可以包含浮动的元素（清除浮动）")]),t._v(" "),a("li",[t._v("BFC 可以阻止元素被浮动元素覆盖")])]),t._v(" "),a("h2",{attrs:{id:"盒子模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#盒子模型"}},[t._v("#")]),t._v(" 盒子模型")]),t._v(" "),a("p",[t._v("CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。\n盒模型允许我们在其它元素和周围元素边框之间的空间放置元素。\n下面的图片说明了盒子模型(Box Model)：\n"),a("img",{attrs:{src:r(369),alt:"An image"}})]),t._v(" "),a("p",[t._v("不同部分的说明：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Margin(外边距)")]),t._v(" - 清除边框外的区域，外边距是透明的。")]),t._v(" "),a("li",[a("strong",[t._v("order(边框)")]),t._v(" - 围绕在内边距和内容外的边框。")]),t._v(" "),a("li",[a("strong",[t._v("Padding(内边距)")]),t._v(" - 清除内容周围的区域，内边距是透明的。")]),t._v(" "),a("li",[a("strong",[t._v("Content(内容)")]),t._v(" - 盒子的内容，显示文本和图像。")])]),t._v(" "),a("h3",{attrs:{id:"w3c盒子模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#w3c盒子模型"}},[t._v("#")]),t._v(" W3C盒子模型")]),t._v(" "),a("p",[t._v("标准盒模型下盒子的大小 = width ( content ) + border + padding + margin")]),t._v(" "),a("h3",{attrs:{id:"怪异盒模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#怪异盒模型"}},[t._v("#")]),t._v(" 怪异盒模型")]),t._v(" "),a("p",[t._v("怪异盒模型下盒子的大小=width（content + border + padding） + margin")]),t._v(" "),a("h2",{attrs:{id:"async-与-defer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#async-与-defer"}},[t._v("#")]),t._v(" async 与 defer")]),t._v(" "),a("p",[t._v("当浏览器碰到 script 脚本的时候：")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v('<script src="script.js"><\/script>')]),t._v(" "),a("br"),t._v("\n没有 defer 或 async，浏览器会立即加载并执行指定的脚本，“立即”指的是在渲染该 script 标签之下的文档元素之前，也就是说不等待后续载入的文档元素，读到就加载并执行。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v('<script async src="script.js"><\/script>')]),t._v(" "),a("br"),t._v("\n有 async，加载和渲染后续文档元素的过程将和 script.js 的加载与执行并行进行（异步）。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v('<script defer src="myscript.js"><\/script>')]),t._v(" "),a("br"),t._v("\n有 defer，加载后续文档元素的过程将和 script.js 的加载并行进行（异步），但是 script.js 的执行要在所有元素解析完成之后，DOMContentLoaded 事件触发之前完成。")])])]),t._v(" "),a("p",[t._v("从实用角度来说呢，首先把所有脚本都丢到 "),a("code",[t._v("</body>")]),t._v(" 之前是最佳实践，因为对于旧浏览器来说这是唯一的优化选择，此法可保证非脚本的其他一切元素能够以最快的速度得到加载和解析。")]),t._v(" "),a("p",[a("img",{attrs:{src:r(370),alt:"An image"}}),t._v("\n蓝色线代表网络读取，红色线代表执行时间，这俩都是针对脚本的；绿色线代表 HTML 解析。"),a("br"),t._v("\n此图告诉我们以下几个要点：")]),t._v(" "),a("ol",[a("li",[t._v("defer 和 async 在网络读取（下载）这块儿是一样的，都是异步的（相较于 HTML 解析）")]),t._v(" "),a("li",[t._v("它俩的差别在于脚本下载完之后何时执行，显然 defer 是最接近我们对于应用脚本加载和执行的要求的")]),t._v(" "),a("li",[t._v("关于 defer，此图未尽之处在于它是按照加载顺序执行脚本的，这一点要善加利用")]),t._v(" "),a("li",[t._v("async 则是一个乱序执行的主，反正对它来说脚本的加载和执行是紧紧挨着的，所以不管你声明的顺序如何，只要它加载完了就会立刻执行")]),t._v(" "),a("li",[t._v("仔细想想，async 对于应用脚本的用处不大，因为它完全不考虑依赖（哪怕是最低级的顺序执行），不过它对于那些可以不依赖任何脚本或不被任何脚本依赖的脚本来说却是非常合适的，最典型的例子：Google Analytics")])])])}),[],!1,null,null,null);s.default=v.exports}}]);